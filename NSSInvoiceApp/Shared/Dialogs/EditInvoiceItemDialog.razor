@if (Visible)
{
    <MudOverlay Visible="true" DarkBackground="true" AutoClose="false">
        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">Edit Invoice Item</MudText>
                </CardHeaderContent>
                <CardHeaderActions>
                    <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Error" OnClick="@CancelClicked" />
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardContent>
                <EditForm Model="@InvoiceItem" OnValidSubmit="@EditedClicked">
                    <DataAnnotationsValidator />

                    <MudGrid>
                        <MudItem xs="12" sm="7">
                            <MudCard>
                                <MudCardContent>
                                    <MudTextField @bind-Value="@InvoiceItem.Description" Label="Description" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                                    <br />
                                    <MudTextField @bind-Value="@InvoiceItem.Price" T="double" Label="Amount" Variant="Variant.Outlined" Margin="Margin.Dense" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.AttachMoney" />
                                    <br />
                                    <MudNumericField @bind-Value="@InvoiceItem.Quantity" T="int" Label="Quantity" Margin="Margin.Dense" Variant="Variant.Outlined" HideSpinButtons="true" Step="1" />
                                    <br />
                                    <MudCheckBox @bind-Checked="@InvoiceItem.IsTax" T="bool" Label="Sales Tax?" Color="Color.Primary"></MudCheckBox>
                                </MudCardContent>
                            </MudCard>
                        </MudItem>
                    </MudGrid>
                </EditForm>
            </MudCardContent>
            <MudCardActions>
                <MudButtonGroup OverrideStyles="false" Style="width:100%;">
                    <MudIconButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Secondary" Class="ml-auto" Style="width:33%;" Icon="@Icons.Filled.ArrowBack" OnClick="@CancelClicked"></MudIconButton>
                    <MudIconButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Dark" Class="ml-auto" Style="width:33%;" Icon="@Icons.Filled.Delete" OnClick="@DeleteClicked" />
                    <MudIconButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Success" Class="ml-auto" Style="width:33%;" OnClick="@EditedClicked" Icon="@Icons.Filled.Save"></MudIconButton>
                </MudButtonGroup>

            </MudCardActions>
        </MudCard>
    </MudOverlay>
}

@code {
    [Parameter]
    public bool Visible { get; set; }

    [Parameter]
    public EventCallback<bool> VisibleChanged { get; set; }

    [Parameter]
    public InvoiceItem InvoiceItem { get; set; }

    [Parameter]
    public EventCallback<InvoiceItem> InvoiceItemChanged { get; set; }

    [Parameter]
    public EventCallback OnEdited { get; set; }

    [Parameter]
    public EventCallback OnCancel { get; set; }

    [Parameter]
    public EventCallback OnDelete { get; set; }

    private async void EditedClicked()
    {
        await OnEdited.InvokeAsync();
    }

    private async void CancelClicked()
    {
        await OnCancel.InvokeAsync();
    }

    private async void DeleteClicked()
    {
        await OnDelete.InvokeAsync();
    }
}