@inherits LayoutComponentBase
@inject IDialogService dialogService
@inject DataService dataService

<MudThemeProvider @bind-IsDarkMode="@dataService.Instance.EnableDarkMode"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<div class="page">
	<MudLayout Style="height:100%;">
        <MudAppBar Elevation="1">
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
            <MudSpacer />
            <MudText>@dataService.Title</MudText>
            <MudSpacer />
            <MudIconButton Icon="@Icons.Filled.Add" Color="Color.Inherit" OnClick="OpenDialog"/>
            @*<MudMenu StartIcon="@Icons.Filled.Add" Variant="Variant.Filled" EndIcon="@Icons.Filled.KeyboardArrowDown" IconColor="Color.Secondary"  >
                <MudMenuItem OnClick="OpenDialog">Add Invoice</MudMenuItem>
                <MudMenuItem>Add Expense</MudMenuItem>
                <MudMenuItem>Add Customer</MudMenuItem>
            </MudMenu>*@
        </MudAppBar>
        <MudDrawer @bind-Open="@open" Elevation="1">
            <MudDrawerHeader>
                <MudText Typo="Typo.h6">Invoicer</MudText>
            </MudDrawerHeader>
            <MudNavMenu>
                <MudNavLink Match="NavLinkMatch.All" Href="/" >Home</MudNavLink>
                <MudNavLink Match="NavLinkMatch.All" Href="/invoices">Invoices</MudNavLink>
                <MudNavLink Match="NavLinkMatch.All" Href="/expenses">Expenses</MudNavLink>
                <MudNavLink Match="NavLinkMatch.All" Href="/customers">Customers</MudNavLink>
                <MudDivider />
                <MudNavLink Match="NavLinkMatch.All" Href="/settings">Settings</MudNavLink>
            </MudNavMenu>
        </MudDrawer>
    <MudMainContent Class="pt-16">
        <MudContainer >
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>
</div>

@code{
    bool open = false;

    protected override Task OnInitializedAsync()
    {
        if (dataService.Instance == null)
        {
            bool dataLoaded = dataService.LoadData().Result;
            if (dataLoaded)
            {
                if (dataService.Instance.LastUpdated == DateTime.MinValue.ToString())
                {
                    dataService.Instance.LastUpdated = DateTime.Now.ToString();
                    dataService.SaveData();
                }
            }
        }
        dataService.ToggleSidebar = ToggleDrawer;
        return base.OnInitializedAsync();
    }

    void ToggleDrawer()
    {
        open = !open;
        StateHasChanged();
    }

    private void OpenDialog()
    {
        dialogService.Show<NewItemDialog>("Add Item");
    }
}