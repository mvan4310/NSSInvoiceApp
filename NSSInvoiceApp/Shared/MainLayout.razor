@inherits LayoutComponentBase
@inject IDialogService dialogService
@inject DataService dataService

<MudThemeProvider @bind-IsDarkMode="@dataService.Instance.EnableDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

 <AddItemMenu @bind-Visible="@showAddMenu" />

<MudSwipeArea OnSwipe="@OnSwipe" Style="position: absolute; top: 0; right: 0; bottom: 0; left: 0;">
    <div class="page">
        <MudLayout Style="height:100%;">
            <MudAppBar Elevation="1">
                <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@ToggleDrawer" />
                <MudSpacer />
                <MudText>@dataService.Title</MudText>
                <MudSpacer />
                <MudIconButton Icon="@Icons.Filled.Add" Color="Color.Inherit" OnClick="OpenDialog" />
            </MudAppBar>
            <MudDrawer @bind-Open="@open" Elevation="1">
                <MudDrawerHeader>
                    <MudText Typo="Typo.h4" Align="Align.Center">Invoisee</MudText>
                    <MudDivider />
                </MudDrawerHeader>
                <MudNavMenu Bordered="true" Color="Color.Info">
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.Home" Href="/">Home</MudNavLink>
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.Folder" Href="/invoices">Invoices</MudNavLink>
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.Money" Href="/expenses">Expenses</MudNavLink>
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.People" Href="/customers">Customers</MudNavLink>
                    <MudDivider />
                    <MudNavLink Match="NavLinkMatch.All" Icon="@Icons.Filled.Settings" Href="/settings">Settings</MudNavLink>
                </MudNavMenu>
            </MudDrawer>
            <MudMainContent Class="pt-16">
                <MudContainer>
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </div>
</MudSwipeArea>

@code {
    bool open = false;
    bool showAddMenu = false;

    protected override Task OnInitializedAsync()
    {
        if (dataService.Instance == null)
        {
            bool dataLoaded = dataService.LoadData().Result;
            if (dataLoaded)
            {
                if (dataService.Instance.LastUpdated == DateTime.MinValue.ToString())
                {
                    dataService.Instance.LastUpdated = DateTime.Now.ToString();
                    dataService.SaveData();
                }
            }
        }
        dataService.UpdateTitle = OnTitleChanged;
        dataService.ToggleSidebar = ToggleDrawer;
        return base.OnInitializedAsync();
    }

    void ToggleDrawer()
    {
        open = !open;
        StateHasChanged();
    }

    private void OpenDialog()
    {
        //dialogService.Show<NewItemDialog>("Add Item");
        showAddMenu = true;
    }

    public void OnSwipe(SwipeDirection direction)
    {
        if (direction == SwipeDirection.LeftToRight && !open)
        {
            open = true;
            StateHasChanged();
        }
        else if (direction == SwipeDirection.RightToLeft && open)
        {
            open = false;
            StateHasChanged();
        }
    }

    private void OnTitleChanged(string title)
    {
        dataService.Title = title;
        StateHasChanged();
    }
}