@page "/invoices/view/{ID:int}"
@inject DataService dataService;
@inject ISnackbar snackbar
@inject NavigationManager navigationManager

<MudGrid>
    @if (!invoice.ReceivedPayment)
    {
        <MudItem xs="12" sm="12" md="12">
            <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Success" Class="ml-auto" Style="width:100%;" OnClick="@OnPaidClicked">Mark As Paid</MudButton>
        </MudItem>
    }
    <MudItem xs="12" sm="7">
        <MudCard>
            <MudCardContent>
                <MudField Label="Number" Variant="Variant.Outlined">@invoice.InvoiceNumber</MudField>
                <MudField Label="Customer" Variant="Variant.Outlined">@invoice.Customer</MudField>
                <MudField Label="Date">@invoice.Date</MudField>
                <MudField Label="Due Date">@invoice.DueDate</MudField>
                <MudDataGrid Items="@InvoiceItems" Breakpoint="Breakpoint.None">
                    <Columns>
                        <Column T="InvoiceItem" Field="Description" />
                        <Column T="InvoiceItem" Field="Quantity" />
                        <Column T="InvoiceItem" Field="Price" />
                        <Column T="InvoiceItem" Field="IsTax" />
                    </Columns>
                </MudDataGrid>
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Secondary" Class="ml-auto" OnClick="@OnCancelClicked">Cancel</MudButton>
                <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Tertiary" Class="ml-auto" OnClick="@OnSendClicked">Send...</MudButton>
                <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="@OnEditClicked">Edit</MudButton>
            </MudCardActions>
        </MudCard>
    </MudItem>
</MudGrid>

@code {
    [Parameter]
    public int ID { get; set; }

    Invoice invoice = new();
    List<InvoiceItem> InvoiceItems = new();
    protected override async Task OnParametersSetAsync()
    {
        dataService.Title = "View Invoice";
        invoice = dataService.Instance.Invoices.FirstOrDefault(a => a.Id == ID);
        InvoiceItems = dataService.Instance.InvoiceItems.Where(a => a.InvoiceId == ID).ToList();

        await InvokeAsync(StateHasChanged);
    }

    private void OnSendClicked()
    {

    }

    private void OnCancelClicked()
    {
        navigationManager.NavigateTo($"/invoices/");
    }

    private void OnEditClicked()
    {
        navigationManager.NavigateTo($"/invoices/edit/{invoice.Id}");
    }

    private async void OnPaidClicked()
    {
        invoice.DateReceived = DateTime.Now;
        invoice.ReceivedPayment = true;

        dataService.SaveData();

        await InvokeAsync(StateHasChanged);
    }
}