@page "/expenses/view/{ID:int}"
@inject DataService dataService;
@inject ISnackbar snackbar
@inject NavigationManager navigationManager

<MudGrid>
    <MudItem xs="12" sm="12">
        <MudCard>
            <MudCardContent>
                <MudField Label="Description" Variant="Variant.Outlined" Margin="Margin.Dense">@expense.Name</MudField>
                <br />
                <MudField Label="Amount" Variant="Variant.Outlined" Margin="Margin.Dense" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.AttachMoney">@expense.TotalAmount</MudField>
                <br />
                <MudField Label="Date" Variant="Variant.Outlined">@expense.Date.ToShortDateString()</MudField>
            </MudCardContent>
            <MudCardActions>
                <MudButtonGroup OverrideStyles="false" Style="width:100%;">
                    <MudIconButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Secondary" Class="ml-auto" Style="width:50%;" Icon="@Icons.Filled.ArrowBack" OnClick="@OnCancelClicked"></MudIconButton>
                    <MudIconButton ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Info" Class="ml-auto" Style="width:50%;" Icon="@Icons.Filled.Edit" OnClick="@OnEditClicked" />
                </MudButtonGroup>
            </MudCardActions>
        </MudCard>
    </MudItem>
</MudGrid>

@code {
    [Parameter]
    public int ID { get; set; }

    Expense expense = new Expense() { Date = DateTime.Now };

    protected override async Task OnParametersSetAsync()
    {
        dataService.UpdateTitle.Invoke("View Expense");
        expense = dataService.Instance.Expenses.FirstOrDefault(a => a.Id == ID);
    }

    private void OnCancelClicked()
    {
        navigationManager.NavigateTo($"/expenses/");
    }

    private void OnEditClicked()
    {
        navigationManager.NavigateTo($"/expenses/edit/{expense.Id}");
    }
}