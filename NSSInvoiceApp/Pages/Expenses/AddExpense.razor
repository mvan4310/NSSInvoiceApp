@page "/expenses/add"
@inject DataService dataService;
@inject ISnackbar snackbar
@inject NavigationManager navigationManager

@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<EditForm Model="@expense" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />

    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudTextField @bind-Value="@expense.Name" Label="Description" Variant="Variant.Outlined" Margin="Margin.Dense"></MudTextField>
                    <br />
                    <MudTextField @bind-Value="@expense.TotalAmount" T="double" Label="Amount" Variant="Variant.Outlined" Margin="Margin.Dense" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.AttachMoney" />
                    <br />
                    <MudDatePicker Label="Date" Variant="Variant.Outlined" @bind-Value="@expense.Date" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Save Expense</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    Expense expense = new Expense() { Date = DateTime.Now };

    protected override async Task OnParametersSetAsync()
    {
        dataService.UpdateTitle.Invoke("Add Expense");
    }

    private void OnValidSubmit(EditContext context)
    {
        expense.Id = dataService.Instance.Expenses.Select(a => a.Id).DefaultIfEmpty(0).Max() + 1;

        dataService.Instance.Expenses.Add(expense);
        dataService.SaveData();

        navigationManager.NavigateTo($"/expenses/view/{expense.Id}");
        StateHasChanged();
    }
}